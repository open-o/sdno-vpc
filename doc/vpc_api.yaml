swagger: '2.0'
info:
  title: VPC Service API
  description: VPC service provides “Virtual Private cloud” service in SDN-O on given OpenStack based clouds.
  version: "1.0.0"
host: sdno.openo.org
schemes:
  - https
  - http
basePath: /v1
paths:
  /vpcs:
    post:
      summary: Create VPC
      description: Create new VPC in OpenStack cloud.
      operationId: createVpc
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: vpc
          description: Provide required properties of VPC.
          required: true
          schema:
            $ref: '#/definitions/Vpc'
      responses:
        201:
          description: VPC creation request is accepted and VPC service started to process it. To find the progress of VPC creation, use GET on returned vpc'
          schema:
            $ref: '#/definitions/Vpc'
        400:
          description: VPC resource provided in body is missing with required properties.
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: List VPC
      description: List the managed VPCs
      operationId: listVpc
      produces:
        - application/json
      responses:
        200:
          description: List of VPC
          schema:
            type: array
            items:
              $ref: '#/definitions/Vpc'
        401:
          description: Unauthorized
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
  /vpcs/{vpcId}:
    get:
      summary: Retrieve VPC
      description: Retrieves the given VPC for the vpcId
      operationId: getVpc
      parameters:
        - name: vpcId
          in: path
          description: VPC Id
          required: true
          type: string
      responses:
        200:
          description: details of VPC
          schema:
            $ref: '#/definitions/Vpc'
        401:
          description: Unauthorized
        404:
          description: VPC Not Found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update VPC
      description: Update the given VPC for the vpcId
      operationId: updateVpc
      parameters:
        - name: vpcId
          in: path
          description: VPC Id
          required: true
          type: string
        - in: body
          name: body
          description: Provide update-able properties of VPC.
          required: true
          schema:
            $ref: '#/definitions/Vpc'
      responses:
        200:
          description: details of VPC
          schema:
            $ref: '#/definitions/Vpc'
        401:
          description: Unauthorized
        404:
          description: VPC  Not Found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete VPC
      description: Delete the given VPC for the vpcId
      operationId: deleteVpc
      parameters:
        - name: vpcId
          in: path
          description: VPC Id
          required: true
          type: string
      responses:
        204:
          description: VPC deleted
        401:
          description: Unauthorized
        404:
          description: VPC is not found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
  /subnets:
    post:
      summary: Create Subnet
      description: Create new Subnet under given VPC in OpenStack cloud.
      operationId: createSubnet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: subnet
          description: Provide required properties of Subnet.
          required: true
          schema:
            $ref: '#/definitions/Subnet'
      responses:
        201:
          description: Subnet creation request is accepted and VPC service started to process it. To find the progress of Subnet creation, use GET on return Subnet->id'
          schema:
            $ref: '#/definitions/Subnet'
        400:
          description: Subnet resource provided in body is missing with required properties.
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Unauthorized
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: List Subnets
      description: List the managed Subnets under given VPC
      operationId: listSubnet
      produces:
        - application/json
      parameters:
        - name: vpcId
          in: query
          description: VPC Id
          required: true
          type: string
      responses:
        200:
          description: List of Subnet
          schema:
            type: array
            items:
              $ref: '#/definitions/Subnet'
        401:
          description: Unauthorized
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
  /subnets/{subnetId}:
    get:
      summary: Retrieve Subnet
      description: Retrieves the Subnet for the subnetId under given VPC
      operationId: getSubnet
      parameters:
        - name: subnetId
          in: path
          description: Subnet Id
          required: true
          type: string
      responses:
        200:
          description: details of Subnet
          schema:
            $ref: '#/definitions/Subnet'
        401:
          description: Unauthorized
        404:
          description: VPC or Subnet Not Found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    patch:
      summary: Update Subnet
      description: Update the Subnet under given VPC
      operationId: updateSubnet
      parameters:
        - name: subnetId
          in: path
          description: Subnet Id
          required: true
          type: string
        - in: body
          name: body
          description: Provide update-able properties of Subnet.
          required: true
          schema:
            $ref: '#/definitions/Subnet'
      responses:
        200:
          description: details of Subnet
          schema:
            $ref: '#/definitions/Subnet'
        401:
          description: Unauthorized
        404:
          description: VPC or Subnet Not Found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Subnet
      description: Delete the Subnet under given VPC
      operationId: deleteSubnet
      parameters:
        - name: subnetId
          in: path
          description: Subnet Id
          required: true
          type: string
      responses:
        204:
          description: Subnet deleted
        401:
          description: Unauthorized
        404:
          description: VPC or Subnet Not found
        500:
          description: VPC service failed to process the request.
          schema:
            $ref: '#/definitions/Error'
definitions:
  Vpc:
    type: object
    description: VPC encapsulate an external IP for the given project in a domain. Each property description is provided with 1. required 2. update allowed 3. format. whenever its needs to be mentioned explicitly.
    properties:
      id:
        type: string
        description: VPC identifier. UUID4 format. VPC service set this property during create operation, if it is not provided as part of the request. 
      name:
        type: string
        description: VPC name in the format of Keystone <domain>/<project> (max 512 char in length). required.
      description:
        type: string
        description: Describes the details about VPC, Update allowed
      status:
        type: string
        description: When VPC is created/updated, initially the status is set to IN_PROGRESS. Once operation is completed, it is set to OK/ERROR based on the operation result.
        enum:
          - INIT
          - OK
          - ERROR
      status_reason:
        type: string
        description: In case on ERROR status, it will have the reason for the error. Otherwise its empty. It is required to make create process to be asynchronous. 
      attributes:
        $ref: '#/definitions/attributes'
      externalIP:
        type: string
        description: External IP assigned to the VPC. ipv4 supported. Used by SNAT and IPSec VPN Service. VPC service set this property after VPC is created.
      osControllerId:
        type: string
        description: Before VPC is created, user configures the OpenStack controller connection credentials in BRS service and it’s the Id of that BRS OpenStack controller, UUID4 format. required 
      createdAt:
        type: string
        format: date
        description: VPC creation time in YYYYMMDDHHMMSS in UTC time zone. VPC service set this property.
      updatedAt:
        type: string
        format: date
        description: Lastest VPC update time in YYYYMMDDHHMMSS in UTC time zone. VPC service set this property.
    required:
      - name
      - osControllerId
    example:
      id: "16fd2706-8baf-433b-82eb-8c7fada847da"
      name: "default/sdno_project"
      osControllerId: "16fd2706-8baf-433b-82eb-8c7fada847dd"
      description: "Sample VPC"
      status: OK
      admin_state: UP
      externalIp: 10.0.0.1
      createdAt: 20160401121314
      updatedAt: 20160401121718
      attributes:
        projectId: "16fd2706-8baf-433b-82eb-8c7fada847db"
        domainId: "default"
        routerId: "16fd2706-8baf-433b-82eb-8c7fada847dc"
  Subnet:
    type: object
    description: Under given VPC, one or many Subnets are created with different CIDR. Each property description is provided with 1. required 2. update allowed 3. format. whenever its needs to be mentioned explicitly.
    properties:
      id:
        type: string
        description: Subnet identifier in UUID4 format. VPC service set this property, if it is not provided as part of the request
      name:
        type: string
        description: Subnet name (max 255 char in length). required.
      description:
        type: string
        description: Describes the details about subnet. Update allowed
      status:
        type: string
        description: When Subnet is created/updated, initially the status is set to IN_PROGRESS. Once operation is completed, it is set to OK/ERROR based on the operation result.
        enum:
          - INIT
          - OK
          - ERROR
      status_reason:
        type: string
        description: In case of ERROR status, it will have the reason for the error. Otherwise its empty. It is required to make create process to be asynchronous. 
      admin_state:
        type: string
        description: Admin state.
        enum:
          - UP
          - DOWN
      attributes:
        $ref: '#/definitions/subnet_attributes'
      cidr:
        type: string
        description: vpc subnet IP network, should be in format CIDR format. required.
      vpcId:
        type: string
        description: vpc owns the subnet. required.
      gatewayIp:
        type: string
        description: Gateway Ip addressed used for this subnet. ipv4 supported. VPC service set this property when Subnet is created.
      createdAt:
        type: string
        format: date
        description: VPC creation time in YYYYMMDDHHMMSS in UTC time zone. VPC service set this property.
      updatedAt:
        type: string
        format: date
        description: Latest VPC update time in YYYYMMDDHHMMSS in UTC time zone. VPC service set this property.
    required:
      - cidr
      - name
      - vpcId
    example:
      id: "16fd2706-8baf-433b-82eb-8c7fada8471a"
      name: "sdno_subnet"
      vpcId: "16fd2706-8baf-433b-82eb-8c7fada8473d"
      description: "Sample VxLan"
      status: OK
      gatewayIp: 10.1.0.1
      cidr: 10.1.0.0/24
      createdAt: 20160401121314
      updatedAt: 20160401121718
      attributes:
        networkId: "16fd2706-8baf-433b-82eb-8c7fada847db"
        subnetId: "16fd2706-8baf-433b-82eb-8c7fada847dc"
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  attributes:
    type: object
    description: Having underlay projectId, domainId and routerId. Map format. VPC service set this property during create or update operations.
    properties:
      routerId:
        type: string
        description: Underlay router UUID. VPC service set this property as part of create operation
      projectId:
        type: string
        description: OpenStack keystone project UUID created as part of VPC creation
      domainId:
        type: string
        description: OpenStack keystone domain ID. VPC service set this property by referring the ID of domain mentioned in the VPC name property.
  subnet_attributes:
    type: object
    description: Having underlay networkId, subnetId. Map format. VPC service set this property during create or update operations.
    properties:
      networkId:
        type: string
        description: Underlay network UUID. VPC service set this property as part of create operation
      subnetId:
        type: string
        description: Underlay subnet UUID. VPC service set this property as part of create operation
